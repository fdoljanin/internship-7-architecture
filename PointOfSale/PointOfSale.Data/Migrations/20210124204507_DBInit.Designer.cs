// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PointOfSale.Data.Entities;

namespace PointOfSale.Data.Migrations
{
    [DbContext(typeof(PointOfSaleDbContext))]
    [Migration("20210124204507_DBInit")]
    partial class DBInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.ArticleBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("OfferId");

                    b.ToTable("ArticleBills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillId = 1,
                            OfferId = 1,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 2,
                            BillId = 1,
                            OfferId = 5,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            BillId = 2,
                            OfferId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            BillId = 2,
                            OfferId = 6,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 5,
                            BillId = 2,
                            OfferId = 5,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 6,
                            BillId = 3,
                            OfferId = 8,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 7,
                            BillId = 3,
                            OfferId = 1,
                            Quantity = 12
                        },
                        new
                        {
                            Id = 8,
                            BillId = 3,
                            OfferId = 9,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 9,
                            BillId = 4,
                            OfferId = 12,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 10,
                            BillId = 4,
                            OfferId = 9,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 11,
                            BillId = 6,
                            OfferId = 12,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 12,
                            BillId = 6,
                            OfferId = 1,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cancelled = false,
                            Cost = 5.46m,
                            TransactionDate = new DateTime(2020, 12, 30, 12, 0, 1, 0, DateTimeKind.Unspecified),
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Cancelled = false,
                            Cost = 124.83m,
                            TransactionDate = new DateTime(2021, 1, 19, 9, 28, 17, 0, DateTimeKind.Unspecified),
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            Cancelled = false,
                            Cost = 2517.87m,
                            TransactionDate = new DateTime(2021, 1, 19, 9, 31, 33, 0, DateTimeKind.Unspecified),
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            Cancelled = false,
                            Cost = 1880.00m,
                            TransactionDate = new DateTime(2021, 1, 19, 10, 21, 34, 0, DateTimeKind.Unspecified),
                            Type = 0
                        },
                        new
                        {
                            Id = 5,
                            Cancelled = false,
                            Cost = 16.00m,
                            TransactionDate = new DateTime(2021, 1, 19, 14, 0, 1, 0, DateTimeKind.Unspecified),
                            Type = 2
                        },
                        new
                        {
                            Id = 6,
                            Cancelled = false,
                            Cost = 81.49m,
                            TransactionDate = new DateTime(2021, 1, 20, 10, 21, 33, 0, DateTimeKind.Unspecified),
                            Type = 0
                        },
                        new
                        {
                            Id = 7,
                            Cancelled = false,
                            Cost = 184.95m,
                            TransactionDate = new DateTime(2021, 1, 20, 10, 25, 0, 0, DateTimeKind.Unspecified),
                            Type = 0
                        },
                        new
                        {
                            Id = 8,
                            Cancelled = false,
                            Cost = 210.00m,
                            TransactionDate = new DateTime(2021, 1, 24, 20, 39, 3, 0, DateTimeKind.Unspecified),
                            Type = 1
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Technology"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Literature"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Household"
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isRemoved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Owen",
                            LastName = "Cole",
                            Pin = "42161657377",
                            isRemoved = false
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Ali",
                            LastName = "Solomon",
                            Pin = "34148898582",
                            isRemoved = false
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Megan",
                            LastName = "Hodge",
                            Pin = "24335495767",
                            isRemoved = false
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Jamie",
                            LastName = "Witt",
                            Pin = "00484037984",
                            isRemoved = false
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkEnd")
                        .HasColumnType("int");

                    b.Property<int>("WorkStart")
                        .HasColumnType("int");

                    b.Property<bool>("isRemoved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Zara",
                            LastName = "Fisher",
                            Pin = "19493419882",
                            WorkEnd = 14,
                            WorkStart = 6,
                            isRemoved = false
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Sean",
                            LastName = "Hess",
                            Pin = "24823185487",
                            WorkEnd = 18,
                            WorkStart = 8,
                            isRemoved = false
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Eliza",
                            LastName = "Martinez",
                            Pin = "83689476125",
                            WorkEnd = 22,
                            WorkStart = 16,
                            isRemoved = false
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Chocolate bar",
                            Price = 1.49m,
                            Quantity = 23,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Nail painting",
                            Price = 39.99m,
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "E-bike",
                            Price = 70.00m,
                            Quantity = 5,
                            Type = 2
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Magazine",
                            Price = 3.00m,
                            Quantity = 300,
                            Type = 2
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "White bread",
                            Price = 0.99m,
                            Quantity = 50,
                            Type = 0
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "Brown bread",
                            Price = 1.19m,
                            Quantity = 19,
                            Type = 0
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Haircut",
                            Price = 8.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "Pixel 5",
                            Price = 699.00m,
                            Quantity = 7,
                            Type = 0
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Smart Fridge",
                            Price = 1800.00m,
                            Quantity = 3,
                            Type = 0
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Library access",
                            Price = 4.00m,
                            Quantity = 100,
                            Type = 2
                        },
                        new
                        {
                            Id = 11,
                            IsActive = true,
                            Name = "Skin cleaning",
                            Price = 24.99m,
                            Type = 1
                        },
                        new
                        {
                            Id = 12,
                            IsActive = true,
                            Name = "Introduction to Algorithms, book",
                            Price = 80.00m,
                            Quantity = 15,
                            Type = 0
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.OfferCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("OfferId");

                    b.ToTable("OfferCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            OfferId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            OfferId = 5
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            OfferId = 6
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            OfferId = 3
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            OfferId = 8
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            OfferId = 9
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            OfferId = 10
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            OfferId = 12
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            OfferId = 9
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.ServiceBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("OfferId");

                    b.ToTable("ServiceBills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillId = 2,
                            Duration = 3,
                            EmployeeId = 1,
                            OfferId = 2,
                            StartTime = new DateTime(2021, 1, 20, 9, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            BillId = 5,
                            Duration = 2,
                            EmployeeId = 1,
                            OfferId = 7,
                            StartTime = new DateTime(2021, 1, 23, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            BillId = 7,
                            Duration = 4,
                            EmployeeId = 2,
                            OfferId = 2,
                            StartTime = new DateTime(2021, 1, 20, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            BillId = 7,
                            Duration = 1,
                            EmployeeId = 3,
                            OfferId = 11,
                            StartTime = new DateTime(2021, 1, 28, 17, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.SubscriptionBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OfferId");

                    b.ToTable("SubscriptionBills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            OfferId = 4,
                            StartTime = new DateTime(2020, 7, 2, 11, 11, 12, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            OfferId = 10,
                            StartTime = new DateTime(2020, 7, 6, 13, 14, 15, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 2,
                            OfferId = 10,
                            StartTime = new DateTime(2020, 9, 1, 13, 0, 7, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            BillId = 8,
                            CustomerId = 3,
                            OfferId = 3,
                            StartTime = new DateTime(2020, 11, 1, 18, 12, 22, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.ArticleBill", b =>
                {
                    b.HasOne("PointOfSale.Data.Entities.Models.Bill", "Bill")
                        .WithMany("ArticleBills")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSale.Data.Entities.Models.Offer", "Offer")
                        .WithMany("ArticleBills")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.OfferCategory", b =>
                {
                    b.HasOne("PointOfSale.Data.Entities.Models.Category", "Category")
                        .WithMany("OfferCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSale.Data.Entities.Models.Offer", "Offer")
                        .WithMany("OfferCategories")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.ServiceBill", b =>
                {
                    b.HasOne("PointOfSale.Data.Entities.Models.Bill", "Bill")
                        .WithMany("ServiceBills")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSale.Data.Entities.Models.Employee", "Employee")
                        .WithMany("ServiceBills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSale.Data.Entities.Models.Offer", "Offer")
                        .WithMany("ServiceBills")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Employee");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.SubscriptionBill", b =>
                {
                    b.HasOne("PointOfSale.Data.Entities.Models.Bill", "Bill")
                        .WithMany("SubscriptionBills")
                        .HasForeignKey("BillId");

                    b.HasOne("PointOfSale.Data.Entities.Models.Customer", "Customer")
                        .WithMany("SubscriptionBills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSale.Data.Entities.Models.Offer", "Offer")
                        .WithMany("SubscriptionBills")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Customer");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Bill", b =>
                {
                    b.Navigation("ArticleBills");

                    b.Navigation("ServiceBills");

                    b.Navigation("SubscriptionBills");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Category", b =>
                {
                    b.Navigation("OfferCategories");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Customer", b =>
                {
                    b.Navigation("SubscriptionBills");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Employee", b =>
                {
                    b.Navigation("ServiceBills");
                });

            modelBuilder.Entity("PointOfSale.Data.Entities.Models.Offer", b =>
                {
                    b.Navigation("ArticleBills");

                    b.Navigation("OfferCategories");

                    b.Navigation("ServiceBills");

                    b.Navigation("SubscriptionBills");
                });
#pragma warning restore 612, 618
        }
    }
}
